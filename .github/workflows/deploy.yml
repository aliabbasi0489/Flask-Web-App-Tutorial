name: Deploy Flask App with Monitoring

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    # Set up Minikube
    - name: Set up Minikube
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube
        minikube start --driver=docker
        
    # Build and push Docker image
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build and push
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/flask-devops-app:${{ github.sha }} .
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/flask-devops-app:${{ github.sha }}
    
    # Deploy to Kubernetes
    - name: Deploy App
      run: |
        kubectl apply -f k8s/
        minikube service flask-service --url
    
    # Verification
    - name: Verify Deployment
      run: |
        kubectl get pods -o wide
        kubectl get services
        echo "App URL:"
        minikube service flask-service --url
    
    # Monitoring Setup
    - name: Set up Monitoring Stack
      run: |
        # Install Helm if not present
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        
        # Add Helm repos
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo add grafana https://grafana.github.io/helm-charts
        helm repo update
        
        # Install Prometheus
        helm install prometheus prometheus-community/prometheus \
          --set server.service.type=NodePort \
          --set server.service.nodePort=30090
        
        # Install Grafana
        helm install grafana grafana/grafana \
          --set service.type=NodePort \
          --set service.nodePort=30080 \
          --set adminPassword=admin123
        
        # Print access information
        echo "Prometheus URL:"
        minikube service prometheus-server --url
        echo "Grafana URL:"
        minikube service grafana --url
        echo "Grafana credentials: admin / admin123"
    
    # ArgoCD Setup (Optional)
    - name: Set up ArgoCD
      run: |
        kubectl create namespace argocd
        kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
        kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "NodePort"}}'
        echo "ArgoCD URL:"
        minikube service -n argocd argocd-server --url
        echo "ArgoCD admin password:"
        kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d